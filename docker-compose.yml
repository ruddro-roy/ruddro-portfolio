version: '3.8'

services:
  # Main API Service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CESIUM_ION_TOKEN=${CESIUM_ION_TOKEN}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
    depends_on:
      - orbital-engine
    restart: unless-stopped
    networks:
      - orbital-network

  # Orbital Mechanics Engine
  orbital-engine:
    build:
      context: ./orbital-engine
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
    restart: unless-stopped
    networks:
      - orbital-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - orbital-network

  # Static Personal Site
  static-site:
    build:
      context: ./static-site
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - orbital-network

networks:
  orbital-network:
    driver: bridge

volumes:
  orbital-data: